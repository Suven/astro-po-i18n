---
import Default from "../layouts/default.astro";
import gt from "../utils/i18n";
import { Code } from "astro/components";
import { Image } from "astro:assets";
import tutNew from "../../assets/newTranslation.png";
import tutPath from "../../assets/addPath.png";
import tutPath from "../../assets/addPath.png";
import tutTranslating from "../../assets/translating.png";
import tutStats from "../../assets/stats.png";
import tutTerminal from "../../assets/terminal.gif";
---

<Default>
    <h1>{gt.gettext("astro-po-i18n")}</h1>
    <h2>{gt.gettext("The alternate way of translating Astro")}</h2>
    <p
        set:html={gt.gettext(
            "With this skeleton for astro, you can jumpstart an multilingual site that is translated via standard gettext and <code>.po</code> files.",
        )}
    />
    <p>
        {
            gt.gettext(
                "This approach has many advantages, as well as some disadvantages when compared to astros default approach to i18n:",
            )
        }
    </p>
    <ul>
        <li>
            😆 {
                gt.gettext(
                    "Write your content/astro-files only once instead one per translation",
                )
            }
        </li>
        <li>
            😄 {
                gt.gettext(
                    "Translators can handle the format even without dev knowladge",
                )
            }
        </li>
        <li>
            😁 {
                gt.gettext(
                    "You can use services like crowdin to let users translate",
                )
            }
        </li>
        <li>
            😁 {gt.gettext("Poedit enables you to translate with AI")}
        </li>
        <li>
            😊 {gt.gettext("SEO-Safe")}
        </li>
        <li>
            😊 {gt.gettext("Warns you about missing translations")}
        </li>
        <li>
            🙂 {gt.gettext("Builds all translations at once")}
        </li>
        <li>
            😐 {gt.gettext("Previews only one translation at a time")}
        </li>
        <li>
            😢 {gt.gettext("no translatable URLs")}
        </li>
        <li>
            😢 {gt.gettext("no support for SSR. This is SSG only")}
        </li>
    </ul>
    <h3>{gt.gettext("1. Install")}</h3>
    <p>
        {
            gt.gettext(
                "Just run these two commands, to receive this basic skeleton:",
            )
        }
    </p>
    <ol>
        <li>
            <code
                ><tt>git clone git@github.com:Suven/astro-po-i18n.git</tt></code
            >
        </li>
        <li><code><tt>npm i</tt></code></li>
    </ol>

    <h3>
        {gt.gettext("2. Adjust your setup")}
    </h3>
    <p
        set:html={gt.gettext(
            "Specify which languages you wish to support and which is your main one, within <code><tt>utils/i18n.js</tt></code>:",
        )}
    />
    <Code
        code={`const mainLocale = "en";
const locales = ["en", "de", "es"];`}
        lang="js"
    />

    <p
        set:html={gt.gettext(
            "For SEO-safety you are also advised to configure your final domain within <code><tt>astro.config.mjs</tt></code>:",
        )}
    />
    <Code code={`site: "https://example.com",`} lang="js" />

    <p
        set:html={gt.gettext(
            "You might also want to delete all already shipped translations",
        )}
    />
    <Code code={`rm -rf ./locales/*`} lang="sh" />

    <h3>{gt.gettext("3. Place your texts")}</h3>
    <p
        set:html={gt.gettext(
            "There are two workflow flavours in the gettext-communities. The common way is to just place your texts in your main language (commonly english) directly within your templates. That way you are not using keys and give translators a better context of what you want to be translated. It also makes sure that your main language is always fully translated.",
        )}
    />

    <p
        set:html={gt.gettext(
            "The other approach uses keys, that then first need to be translated into your main language. It leaves your content responsible colleagues more freedom but makes it harder for translators. It also comes with the disadvantage that you might overlook to translate content, when the main translation changed its meaning.",
        )}
    />

    <p
        set:html={gt.gettext(
            "The first approach of using direct translations, is more often advised to be used.",
        )}
    />

    <h4>
        {gt.gettext("Direct placing")}
        <small>{gt.gettext("Example")}</small>
    </h4>
    <Code
        code={`---
import gt from "../utils/i18n";
import sprintf from "sprintf-js";
---

<div>{gt.gettext("optionalContext", "Hello World!")}</div>
<div>{gt.gettext("This is the default text")}</div>
<div>{gt.ngettext("I want an apple", "I want apples", numberOfThings)}</div>
<div>{sprintf(gt.gettext('%(username) eats apples everyday!'), { username })}</div>`}
        lang="astro"
    />

    <h4>
        {gt.gettext("Keyed placing")}
        <small>{gt.gettext("Example")}</small>
    </h4>
    <Code
        code={`---
import gt from "../utils/i18n";
---

<div>{gt.gettext("optionalContext", "key")}</div>
<div>{gt.gettext("key")}</div>
<div>{gt.ngettext("key.singular", "key.plural", numberOfThings)}</div>`}
        lang="astro"
    />

    <h4>{gt.gettext("3b. Placing links")}</h4>
    <p
        set:html={gt.gettext(
            "This skeleton also comes with a helper to place localized links within your project.",
        )}
    />
    <Code
        code={`---
import { url } from "../utils/i18n";
---

<a href={url('/about')}>${gt.gettext("Link to /about while staying in the current language")}</a>
<a href={url('/about', 'en')}>${gt.gettext("Link to the english version of /about")}</a>
<a href={url('/about', 'en', true)}>${gt.gettext("Link to the english version of /about including the full domain")}</a>`}
        lang="astro"
    />

    <h3>{gt.gettext("4. Start translating")}</h3>
    <p
        set:html={gt.gettext(
            "This tutorial continues using <a href='https://poedit.net/'>Poedit</a> which is a powerful and commonly used tool for handling po-files. You are free to use any of the various alternatives though.",
        )}
    />
    <p
        set:html={gt.gettext(
            "Start by creating a new translation via <kbd>CMD+N</kbd> and choosing the target language. Store that with <kbd>CMD+S</kbd> in the locales folder like (for example) <code>es.po</code>.",
        )}
    />
    <Image
        src={tutNew}
        alt={gt.gettext("creating a new translation within poedit")}
    />
    <p
        set:html={gt.gettext(
            "Start by creating a new translation via <kbd>CMD+N</kbd> and choosing the target language. Store that with <kbd>CMD+S</kbd> in the locales folder like (for example) <code>es.po</code>.",
        )}
    />
    <p
        set:html={gt.gettext(
            "Next Poedit needs to know how to scan for things to translate. Click <code>Extract from sources</code> and within <code>paths</code>add the <code><tt>./src</tt></code> folder.",
        )}
    />
    <Image src={tutPath} alt={gt.gettext("adding src as path to poedit")} />
    <p
        set:html={gt.gettext(
            "You can then translate by entering your translations to the bottom textarea. Notice how Poedit suggests translations on the right side from different sources.",
        )}
    />
    <Image src={tutTranslating} alt="" />
    <p
        set:html={gt.gettext(
            "Poedit also has useful stats that can be displayed.",
        )}
    />
    <Image src={tutStats} alt="" />
    <p
        set:html={gt.gettext(
            "At last, just relaunch <code>npm run build:all</code> to build all languages for your page, <code>npm run dev</code> to preview your main language, or <code>npm run dev:es</code> to preview your spanish translation.",
        )}
    />
    <p
        set:html={gt.gettext(
            "Building all languages might look like this. Notice the warnings for missing translations.",
        )}
    />
    <img src={tutTerminal.src} alt="" />
    <br /><br />
    <p set:html={gt.gettext("The result can be seen here ;)")} />
</Default>
